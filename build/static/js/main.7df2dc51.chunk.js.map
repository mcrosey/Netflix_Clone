{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","Width","playersVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7df2dc51.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"http://api.themoviedb.org/3/\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(()=> {\n        async function fetchData(){\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    const opts = {\n        height: \"390\",\n        Width: \"100%\",\n        playersVars: {\n            autoplay: 1,\n        },\n    };\n\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl('');\n        } else {\n            movieTrailer(movie?.name || \"\")\n            .then(url => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get(\"v\"));\n            }).catch(error => console.log(error));\n        }\n\n    };\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row-posters\">\n                {movies.map(movie => (\n                    <img \n                    key= {movie.id}\n                    onClick={() => handleClick(movie)}\n                    className={`row-poster ${isLargeRow && \"row-posterLarge\"}`}\n                    src={`${base_url}${\n                        isLargeRow ? movie.poster_path : movie.backdrop_path\n                    }`} \n                    alt={movie.name}\n                    />\n                ))}\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    );\n}\n\nexport default Row\n","const API_KEY = \"28a9e522fafdafbb208e2bc63f3827d7\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport requests from './request'\nimport './Banner.css';\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[\n                Math.floor(Math.random() * request.data.results.length -1)\n            ]\n            );\n            return request;\n        }\n        fetchData();\n    }, []);\n\n    console.log(movie);\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n    }\n\n    return (\n        <header className=\"banner\"\n            style={{\n                backgroundSize: \"cover\",\n                backgroundImage: `url(\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n                )`,\n                backgroundPosition: \"center center\",\n            }}\n        >\n            <div className=\"banner-contents\">\n            <h1 className=\"banner-title\">\n                {movie?.title || movie?.name || movie?.original_name}\n            </h1>\n            <div className=\"banner-buttons\">\n                <button className=\"banner-button\">Play</button>\n                <button className=\"banner-button\">My List</button>\n            </div>\n            <h1 className=\"banner-description\">\n               {truncate(movie?.overview, 150)}\n            </h1>\n            </div>\n            <div className=\"banner-faceBottom\" />\n        </header>\n    )\n}\n\nexport default Banner\n","import React, {useState, useEffect } from 'react';\nimport './Nav.css';\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100) {\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        };\n    }, []);\n\n    return (\n        <div className= {`nav ${show && \"nav-black\"}`}>\n            <img\n            className=\"nav-logo\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/6/67/NewNetflixLogo.png\"\n            alt=\"Netfix Logo\"\n            />\n\n            <img\n            className=\"nav-avatar\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n            alt=\"Netflix Logo\"\n            />\n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" \n      fetchUrl={requests.fetchNetflixOriginals}\n      isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}